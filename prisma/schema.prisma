// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Investor {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  name     String
  password String
  tax_id   String  @unique
  wallet   Wallet?
}

model Wallet {
  id            Int                 @id @default(autoincrement())
  totalInvested Decimal             @default(0.0)
  active        Boolean             @default(false)
  investor      Investor            @relation(fields: [investorId], references: [id])
  investorId    Int                 @unique
  transactions  TransactionRecord[]
  assets        AssetWallet[]
  orders        Order[]
}

model TransactionRecord {
  id        Int      @id @default(autoincrement())
  date      DateTime
  value     Decimal
  wallet    Wallet   @relation(fields: [walletId], references: [id])
  walletId  Int
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
}

model AssetWallet {
  id        Int      @id @default(autoincrement())
  assetId   Int
  walletId  Int
  boughtAt  DateTime
  soldAt    DateTime?
  profit    Decimal?
  quantity  Int

  asset   Asset   @relation(fields: [assetId], references: [id])
  wallet  Wallet  @relation(fields: [walletId], references: [id])

  @@unique([assetId, walletId])
}

model Order {
  id         Int          @id @default(autoincrement())
  status     String
  price      Decimal
  quantity   Int
  wallet     Wallet       @relation(fields: [walletId], references: [id])
  walletId   Int
  assets     OrderAsset[] // An order has many assets through OrderAsset
}

model Asset {
  id             Int            @id @default(autoincrement())
  ticker         String
  date           DateTime
  price          Decimal
  volume         Int
  dailyVariation Decimal
  bbi            Decimal
  rsi            Int?
  scom           Decimal?
  sven           Decimal
  assetName      String
  type           String
  benchmark      String
  pl             Decimal
  macdim         Decimal
  macdis         Decimal
  macdh          Decimal
  bbs            Decimal
  bbl            Decimal
  bbm            Decimal
  rsicom         Decimal
  rsivem         Decimal

  assetWallets   AssetWallet[]
  orders         OrderAsset[]
}

model OrderAsset {
  id          Int     @id @default(autoincrement())
  order       Order   @relation(fields: [orderId], references: [id])
  orderId     Int
  asset       Asset   @relation(fields: [assetId], references: [id])
  assetId     Int
  quantity    Int
  price       Decimal

  @@unique([orderId, assetId])
}
